.media {}
.media--fs {
    .image {
        width: 100%;
    }
}
.media__node {}

.image {
    max-width: 100%;
    width: auto;
    }

.embed {
    overflow: hidden;
    position: relative;
    }
.embed__aspect {
    background-color: $black;
    position: relative;
    width: 100%;
    }
.embed__poster,
.embed__element {
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
    }
.embed__poster {
    @include state( "embed", "playing" ) {
        opacity: 0;
        pointer-events: none;
    }
}
.embed__overlay {
    transition: opacity $base-duration $ease,
                transform ($base-duration * 2) $ease;

    @include state( "play", "button" ) {
        transform: scale( 1.05 );
    }
}
@keyframes circle {
    0% {
        stroke-dashoffset: 1000;
    }

    100% {
        stroke-dashoffset: 0;
    }
}
.embed__playbtn {
    cursor: pointer;
    height: 6.875vw;
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate3d( -50%, -50%, 0 );
    width: 6.875vw;

    .embed__svg {
        overflow: visible;
    }
    .embed__svg--circle {
        height: 100%;
        width: 100%;
    }
    .embed__svg--polygon {
        height: 18px;
        width: 15px;
        left: 50%;
        opacity: 0;
        position: absolute;
        top: 50%;
        transform: translate3d( -50%, 50%, 0 );
        transition: opacity $base-duration $ease,
                    transform $base-duration $ease;

        @include state( "play", "button" ) {
            opacity: 1;
            transform: translate3d( -50%, -50%, 0 );
        }
    }
    polygon {
        fill: $white;
    }
    circle {
        stroke: $white;
        stroke-width: 2;
        stroke-dashoffset: 0;
        stroke-dasharray: 1000;
        r: 3.4375vw;
        cx: 3.4375vw;
        cy: 3.4375vw;
        fill: none;
        transform-origin: center;
        transform: rotate( 180deg );

        @include state( "play", "button" ) {
            animation: circle 1500ms 1;
        }

        @include respond( $tablet-breakpoint ) {
            r: 32px;
            cx: 32px;
            cy: 32px;
        }
    }

    @include state( "embed", "playing" ) {
        opacity: 0;
        pointer-events: none;
    }

    @include respond( $tablet-breakpoint ) {
        height: 64px;
        width: 64px;
    }
}
.embed__playbtn__label {
    left: 50%;
    letter-spacing: 5px;
    line-height: 1;
    position: absolute;
    top: 50%;
    transform: translate3d( -46%, -50%, 0 );
    transition: opacity $base-duration $ease,
                transform $base-duration $ease;

    @include state( "play", "button" ) {
        opacity: 0;
        transform: translate3d( -46%, -100%, 0 );
    }

    @include respond( $tablet-breakpoint ) {
        font-size: $m-size;
    }
}
.embed__filter {
    clip-path: circle( 3.4375vw at 50% 50% );
    filter: blur( 6px );
    transition: filter $base-duration $ease,
                transform $base-duration $ease;

    @include respond( $tablet-breakpoint ) {
        clip-path: circle( 32px at 50% 50% );
    }

    @include state( "play", "button" ) {
        filter: blur( 0px );
        transform: scale( 1.05 );
    }
}
